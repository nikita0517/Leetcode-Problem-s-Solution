/* You are given the head of a singly linked-list. The list can be represented as:

L0 → L1 → … → Ln - 1 → Ln
Reorder the list to be on the following form:

L0 → Ln → L1 → Ln - 1 → L2 → Ln - 2 → …
You may not modify the values in the list's nodes. Only nodes themselves may be changed.  */

class Solution {
public:
    void reorderList(ListNode* head){
       if(!head || !head->next || !head->next->next)  return;
        stack<ListNode*>st;
        ListNode *temp=head;
        int size=0;
        while(temp){
            st.push(temp);
            size++;
            temp=temp->next;
        }
        ListNode *ptr=head;
        for(int i=0;i<size/2;i++){
            ListNode *element=st.top();
            st.pop();
            element->next=ptr->next;
            ptr->next=element;
            ptr=ptr->next->next;
        }
        ptr->next=NULL;
    }
};
