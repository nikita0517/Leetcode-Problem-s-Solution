/* Example 1:

Input: s = "aab"
Output: [["a","a","b"],["aa","b"]]
*/

class Solution {
public:
    void helper(string &s,int start,vector<string>&path,vector<vector<string>>&res){
        int n=s.length();
        if(start==n){
            res.push_back(path);
        }
        else{
            for(int i=start;i<n;i++){
                if(palindrome(s,start,i)){
                    path.push_back(s.substr(start,i-start+1));
                    helper(s,i+1,path,res);
                    path.pop_back();
                }
            }
        }
    }
    vector<vector<string>> partition(string s) {
         vector<vector<string>>res;
         vector<string>path;
         helper(s,0,path,res);
         return res;
    }
   bool palindrome(string &s,int l,int h){
       while(l<h){
           if(s[l++]!=s[h--])
               return false;
       }
       return true;
   }
};
