/*

Example 1:
Input: text1 = "abcde", text2 = "ace" 
Output: 3  
Explanation: The longest common subsequence is "ace" and its length is 3.

*/

class Solution {
public:
   /* 
   //using recursion 
   int findsub(string t1,string t2,int n1,int n2){
        if(n1==0 || n2==0) return 0;
        int len=0;
        if(t1[n1-1]==t2[n2-1])
            return 1+findsub(t1,t2,n1-1,n2-1);
        return max(findsub(t1,t2,n1-1,n2), findsub(t1,t2,n1,n2-1));
    }*/
    
    int lcs(string t1,string t2,int n1,int n2){
        int dp[n1+1][n2+1];
        for(int i=0;i<=n1;i++){
            for(int j=0;j<=n2;j++){
                if(i==0||j==0) dp[i][j]=0;
                else if(t1[i-1]==t2[j-1])
                    dp[i][j]=1+dp[i-1][j-1];
                else 
                    dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
            }
        }return dp[n1][n2];
    }
    int longestCommonSubsequence(string text1, string text2) {
        int n1=text1.length(),n2=text2.length();
        return lcs(text1,text2,n1,n2);
    }
};
