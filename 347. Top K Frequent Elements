/*  Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]   */

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int>res;
        unordered_map<int,int>mp;
        int n=nums.size();
        /*for(auto i:nums)    // 94% of C++ online submissions for Top K Frequent
             mp[i]++;   */
        for(int i=0;i<n;i++)   // 83.06% of C++ online submissions for Top K Frequent
            mp[nums[i]]++;
        
        priority_queue<pair<int,int>>pq;
        
        for(auto &pa:mp)
            pq.emplace(pa.second,pa.first);
        while(k--){
           res.push_back(pq.top().second);
            pq.pop();
        }
    return res;
         }
};
