/*
Example 1:

Input: nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]
Output: 3
Explanation: The repeated subarray with maximum length is [3,2,1].
*/

class Solution {
public:
    int findLength(vector<int>& nums1, vector<int>& nums2) {
        int n1=nums1.size(),n2=nums2.size();
        int dp[n1+1][n2+1];
        for(int i=0;i<=n1;i++)
            for(int j=0;j<=n2;j++)
                dp[i][j]=0;
        for(int i=n1-1;i>=0;i--){
            for(int j=n2-1;j>=0;j--){
                if(nums1[i]==nums2[j])
                    dp[i][j]=1+dp[i+1][j+1];
            }
        }
        int maxlength=0;
        for(int i=0;i<=n1;i++){
            for(int j=0;j<=n2;j++)
                maxlength=max(maxlength,dp[i][j]);
        }
        return maxlength;
    }
};
